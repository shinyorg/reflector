//HintName: EmptyClassReflector.g.cs
// <auto-generated />
#nullable enable

namespace TestNamespace
{
public class EmptyClassReflector : global::Shiny.Reflector.IReflectorClass
{
    private readonly global::TestNamespace.EmptyClass _reflectedObject;

    public EmptyClassReflector(global::TestNamespace.EmptyClass reflectedObject)
    {
        _reflectedObject = reflectedObject;
    }

    public object ReflectedObject => _reflectedObject;

    public global::Shiny.Reflector.PropertyGeneratedInfo[] Properties => new global::Shiny.Reflector.PropertyGeneratedInfo[]
    {
    };

    public T? GetValue<T>(string key)
    {
        var value = this[key];
        if (value == null)
            return default(T);

        return (T)value;
    }

    public object? this[string key]
    {
        get
        {
            switch (key?.ToLower())
            {
                default:
                    throw new global::System.InvalidOperationException($"Cannot get value for key '{key}' in EmptyClassReflector");
            }
        }
        set
        {
            throw new global::System.InvalidOperationException($"Cannot set value for key '{key}' in EmptyClassReflector");
        }
    }

    public void SetValue<T>(string key, T? value)
    {
        this[key] = value;
    }
}
}
